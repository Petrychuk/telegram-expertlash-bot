import os
import random
import string
from pprint import pprint

from database import (
    create_tables, get_db, create_user, get_user_by_telegram_id, update_user_onboarding,
    create_subscription, activate_subscription, cancel_subscription,
    get_active_subscription, get_subscription_by_id, UserRole
)
from config import ADMIN_IDS

def to_dict(model):
    """–ê–∫–∫—É—Ä–∞—Ç–Ω–æ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º SQLAlchemy –º–æ–¥–µ–ª—å –±–µ–∑ —Å–ª—É–∂–µ–±–Ω–æ–≥–æ –ø–æ–ª—è."""
    if not model:
        return None
    d = {k: v for k, v in vars(model).items() if k != "_sa_instance_state"}
    return d


def rand_suffix(n=4):
    return "".join(random.choices(string.ascii_lowercase + string.digits, k=n))


def main():
    print("üöÄ –¢–µ—Å—Ç –ë–î ‚Äî –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª\n")

    # 0) –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã
    create_tables()

    # 1) –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é
    db = next(get_db())

    # 2) –ì–æ—Ç–æ–≤–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    suffix = rand_suffix()
    tg_id = int("12345678")  # –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –æ–¥–∏–Ω –∏–∑ ADMIN_IDS –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏ admin
    sub_id = f"sub_{suffix}"
    cust_id = f"cust_{suffix}"
    print(f"üß™ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ ID: telegram_id={tg_id}, subscription_id={sub_id}\n")

    try:
        # 3) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –¥–æ—Å—Ç–∞—Ç—å
        user = get_user_by_telegram_id(db, tg_id)
        if not user:
            user = create_user(
                db,
                telegram_id=tg_id,
                username=f"nataliia_{suffix}",
                first_name="Nataliia",
                last_name="Petrychuk"
            )
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:")
        else:
            print("‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ:")

        pprint(to_dict(user)); print()

        # üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏
        role = user.role if isinstance(user.role, str) else user.role.value
        role_status = "‚úÖ admin" if str(tg_id) in ADMIN_IDS else "üë© student"
        print(f"üé≠ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î: {role} ({role_status})\n")
        print(f"DEBUG: ADMIN_IDS = {ADMIN_IDS} (type={type(ADMIN_IDS)})")

        # 4) –û–Ω–±–æ—Ä–¥–∏–Ω–≥
        user = update_user_onboarding(
            db,
            telegram_id=tg_id,
            format_choice="video",
            level_choice="beginner",
            time_choice="morning",
            goal_choice="lashes"
        )
        print("‚úÖ –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –æ–±–Ω–æ–≤–ª—ë–Ω:")
        pprint(to_dict(user)); print()

        # 5) –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ (pending)
        subscription = create_subscription(
            db,
            telegram_id=tg_id,
            payment_system="paypal",  # –∏–ª–∏ "stripe"
            subscription_id=sub_id,   # –≤ Stripe –Ω–∞ —ç—Ç–∞–ø–µ checkout —ç—Ç–æ –±—ã–ª –±—ã session_id
            amount=29.99,
            customer_id=cust_id
        )
        print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ (pending):")
        pprint(to_dict(subscription)); print()

        # 6) –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
        subscription = activate_subscription(db, sub_id)
        print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞:")
        pprint(to_dict(subscription)); print()

        # 7) –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ Telegram ID
        active_sub = get_active_subscription(db, tg_id)
        print("üì¶ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞:")
        pprint(to_dict(active_sub) or "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏"); print()

        # 8) –û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏
        cancelled = cancel_subscription(db, sub_id)
        print("üö´ –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞:")
        pprint(to_dict(cancelled)); print()

        # 9) –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ Telegram ID (–µ—â—ë —Ä–∞–∑)
        user = get_user_by_telegram_id(db, tg_id)
        print("üë§ –ü–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
        pprint(to_dict(user)); print()

        # 10) –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ ID
        sub = get_subscription_by_id(db, sub_id)
        print("üîç –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ ID:")
        pprint(to_dict(sub) if sub else "–ù–µ –Ω–∞–π–¥–µ–Ω–∞"); print()

        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        raise
    finally:
        # 11) –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        try:
            db.close()
        except Exception:
            pass

if __name__ == "__main__":
    main()
